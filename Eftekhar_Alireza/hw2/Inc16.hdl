// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/2/Inc16.hdl
/**
 * 16-bit incrementer:
 * out = in + 1
 */
CHIP Inc16 {
    IN in[16];
    OUT out[16];

    PARTS:
    // Initial State
    Not(in= in[0], out= a);
    Not(in= a, out= b);
    Xor(a = a, b = b, out = carry);
    Xor(a = b, b = carry, out = out[0]);
    And(a= b, b= carry, out= carry1);
    // Recursive State
    Not(in= in[1], out= a1);
    Not(in= a1, out= b1);
    Xor(a= b1, b= carry1, out= out[1]);
    And(a= b1, b= carry1, out= carry2);

    Not(in= in[2], out= a2);
    Not(in= a2, out= b2);
    Xor(a= b2, b= carry2, out= out[2]);
    And(a= b2, b= carry2, out= carry3);

    Not(in= in[3], out= a3);
    Not(in= a3, out= b3);
    Xor(a= b3, b= carry3, out= out[3]);
    And(a= b3, b= carry3, out= carry4);

    Not(in= in[4], out= a4);
    Not(in= a4, out= b4);
    Xor(a= b4, b= carry4, out= out[4]);
    And(a= b4, b= carry4, out= carry5);

    Not(in= in[5], out= a5);
    Not(in= a5, out= b5);
    Xor(a= b5, b= carry5, out= out[5]);
    And(a= b5, b= carry5, out= carry6);

    Not(in= in[6], out= a6);
    Not(in= a6, out= b6);
    Xor(a= b6, b= carry6, out= out[6]);
    And(a= b6, b= carry6, out= carry7);

    Not(in= in[7], out= a7);
    Not(in= a7, out= b7);
    Xor(a= b7, b= carry7, out= out[7]);
    And(a= b7, b= carry7, out= carry8);

    Not(in= in[8], out= a8);
    Not(in= a8, out= b8);
    Xor(a= b8, b= carry8, out= out[8]);
    And(a= b8, b= carry8, out= carry9);

    Not(in= in[9], out= a9);
    Not(in= a9, out= b9);
    Xor(a= b9, b= carry9, out= out[9]);
    And(a= b9, b= carry9, out= carry10);

    Not(in= in[10], out= a10);
    Not(in= a10, out= b10);
    Xor(a= b10, b= carry10, out= out[10]);
    And(a= b10, b= carry10, out= carry11);

    Not(in= in[11], out= a11);
    Not(in= a11, out= b11);
    Xor(a= b11, b= carry11, out= out[11]);
    And(a= b11, b= carry11, out= carry12);

    Not(in= in[12], out= a12);
    Not(in= a12, out= b12);
    Xor(a= b12, b= carry12, out= out[12]);
    And(a= b12, b= carry12, out= carry13);

    Not(in= in[13], out= a13);
    Not(in= a13, out= b13);
    Xor(a= b13, b= carry13, out= out[13]);
    And(a= b13, b= carry13, out= carry14);

    Not(in= in[14], out= a14);
    Not(in= a14, out= b14);
    Xor(a= b14, b= carry14, out= out[14]);
    And(a= b14, b= carry14, out= carry15);

    Not(in= in[15], out= a15);
    Not(in= a15, out= b15);
    Xor(a= b15, b= carry15, out= out[15]);
    And(a= b15, b= carry15, out= carry16);
}